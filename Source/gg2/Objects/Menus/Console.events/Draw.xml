<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">x = view_xview[0] + 20;
y = view_yview[0] + view_hview[0] - 100;

var listlen, listheight, i, entryheight, curheight, str;
sep = string_height("_");
listlen = ds_list_size(global.ConsoleLog);
listheight = 0;
for (i = 0; i &lt; listlen; i += 1) {
    str = ds_list_find_value(global.ConsoleLog, i);
    str = string_replace_all(str, '#', '\#');
    listheight += string_height_ext(str, -1, console_width);
}

str = string_replace_all(text, '#', '\#');
entryheight = string_height_ext(str, -1, console_width);
if (entryheight &lt; 12) entryheight = 12;

draw_set_alpha(0.75);
draw_set_color(c_black);
draw_rectangle(x - 5, y - listheight - entryheight - 5, x + console_width + 5, y + 5, false);

draw_set_color(c_gray);
draw_rectangle(x, y - entryheight, x + console_width, y, false);

draw_set_color(c_orange);
draw_set_valign(fa_top);
draw_set_halign(fa_left);
draw_set_alpha(1);

str = text;
if (draw_cursor) {
    str = string_copy(str, 0, seek) + '_' + string_copy(str, seek + 2, string_length(str) - seek - 1);
}
str = string_replace_all(str, '#', '\#');
draw_text_ext(x, y - entryheight, str, -1, console_width);

draw_set_color(c_white);
curheight = 0;
for (i = 0; i &lt; listlen; i += 1) {
    str = ds_list_find_value(global.ConsoleLog, i);
    str = string_replace_all(str, '#', '\#');
    draw_text_ext(x, y - listheight - entryheight + curheight, str, -1, console_width);
    curheight += string_height_ext(str, -1, console_width);
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
