<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="2">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">// Climbing down stairs
if(vspeed == 0) // if we aren't falling this frame
{ 
    if(place_free(x,y+6))
        if(!place_free(x,y+7))
            y += 6;
        else if(speed &gt; 6) if(place_free(x,y+12)) if(!place_free(x,y+13))
            y += 12;
}
xprevious = x;
yprevious = y;

if(global.isHost &amp;&amp; hp&lt;=0) {
    var assistant;
    assistant = secondToLastDamageDealer;
    if (lastDamageDealer and instance_exists(lastDamageDealer))
        if (lastDamageDealer.object)
            if (lastDamageDealer.object.healer)
                assistant = lastDamageDealer.object.healer;
                
    sendEventPlayerDeath(player, lastDamageDealer, assistant, lastDamageSource);
    doEventPlayerDeath(player, lastDamageDealer, assistant, lastDamageSource);
    with(GameServer) {
        ServerBalanceTeams();
    }
    exit;
}
    
if(hp&gt;maxHp) {
    hp=maxHp;
}
    
if(((aimDirection+270) mod 360)&gt;180) {
    image_xscale=1;
    currentWeapon.image_xscale=1;
    currentWeapon.image_angle = aimDirection;
} else {
    image_xscale=-1;
    currentWeapon.image_xscale=-1;
    currentWeapon.image_angle = aimDirection+180;
}
    
currentWeapon.x=round(x);
currentWeapon.y=round(y);
    
// Limit people to the area of the room to prevent the
// "Falling through the floors" issue.
if(x&lt;0) {
    x=0;
}
if(x&gt;map_width()){
    x = map_width();
}
if(y&lt;0) {
    y = 0;
}
if(y&gt;map_height()){
    y = map_height();
}
if(!place_free(x,y+1))
    moveStatus=0;

    
// Cloak
if (cloak and cloakAlpha &gt; 0)
    cloakAlpha = max(cloakAlpha - 0.05, 0);
else if (!cloak and cloakAlpha &lt; 1)
    cloakAlpha = min(cloakAlpha + 0.05, 1);
    
// Taunts
if (taunting)
{
    tauntindex += tauntspeed*0.1;
    if tauntindex &gt;= tauntend taunting=false;
}
    
//sandvich
if (omnomnomnom)
{
    omnomnomnomindex += 0.25;
    image_xscale=xscale;
    if (hp &lt;= maxHp)
        hp += 1.6;
    if (omnomnomnomindex &gt;= omnomnomnomend)
        omnomnomnom=false;
}

//for things polling whether the character is on a medcabinet
onCabinet = place_meeting(x, y, HealingCabinet);

// Last x/y position for death cam if player is dead
player.lastKnownx=x;
player.lastKnowny=y;

// Here the view is set
if (player == global.myself)
{
    if (object_is_ancestor(object_index, Sniper) and zoomed)
    {
        var relxmouse, relymouse;
        relxmouse = min(max(window_views_mouse_get_x()-view_xview[0], 0), view_wview);
        relymouse = min(max(window_views_mouse_get_y()-view_yview[0], 0), view_hview);
        
        view_xview[0] = x+relxmouse-view_wview[0];
        view_yview[0] = y+relymouse-view_hview[0];
    }
    else
    {
        view_xview[0] = x-view_wview[0]/2;
        view_yview[0] = y-view_hview[0]/2;
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
